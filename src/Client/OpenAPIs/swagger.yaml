x-generator: NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: BlazorApp1 API
  version: v1
servers:
- url: https://localhost:5013
paths:
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfUser'
      security:
      - JWT: []
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Test:
    post:
      tags:
      - Test
      operationId: Test_Test
      requestBody:
        x-name: text
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ItemsResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        totalItems:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
